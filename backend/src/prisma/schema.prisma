// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}

model User {
    id        Int      @id @default(autoincrement())
    name      String
    email     String   @unique
    password  String
    role      Int      @default(1)
    token     String?
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())

    orders Order[]
}

model Product {
    id          Int      @id @default(autoincrement())
    name        String
    price       Float
    description String
    quantity    Int
    image       File?    @relation(fields: [imageId], references: [id])
    imageId     Int?     @unique
    createdAt   DateTime @default(now())
    updatedAt   DateTime @default(now())

    orderItems OrderItem[]
    categories CategoriesOnProducts[]
}

model File {
    id        Int      @id @default(autoincrement())
    filename  String
    mimetype  String
    path      String
    product   Product?
    createdAt DateTime @default(now())
}

model Category {
    id   Int    @id @default(autoincrement())
    name String

    createdAt DateTime               @default(now())
    updatedAt DateTime               @default(now())
    products  CategoriesOnProducts[]
}

model CategoriesOnProducts {
    product    Product  @relation(fields: [productId], references: [id])
    productId  Int
    category   Category @relation(fields: [categoryId], references: [id])
    categoryId Int

    @@id([productId, categoryId])
}

model Order {
    id            Int         @id @default(autoincrement())
    address       String
    paymentMethod String
    total         Float
    orderItems    OrderItem[]
    userId        Int
    createdAt     DateTime    @default(now())
    updatedAt     DateTime    @default(now())
    user          User        @relation(fields: [userId], references: [id])
}

model OrderItem {
    id        Int     @id @default(autoincrement())
    product   Product @relation(fields: [productId], references: [id])
    productId Int
    order     Order   @relation(fields: [orderId], references: [id])
    orderId   Int
    quantity  Int

    @@unique([productId, orderId])
}
